const Joi = require('joi');

const schema = Joi.object({
  identifier: Joi.string()
    .pattern(/^\d{8}$/)
    .required()
    .label('Ідентифікатор')
    .description('Код ЄДРПОУ в Єдиному державному реєстрі юридичних осіб, фізичних осіб-підприємців та громадських формувань (ЄДР). Наприклад: 01234567.'),
  
  prefLabel: Joi.string()
    .required()
    .label('Повна назва')
    .description('Назва відповідно до ЄДР або установчих документів. Наприклад: Управління освіти Бориспільської міської ради.'),
  
  altLabel: Joi.string()
    .optional()
    .label('Коротка або альтернативна назва')
    .description('Будь-яка інша, в тому числі скорочена назва. Наприклад: Держенергоефективності.'),
  
  description: Joi.string()
    .max(300)
    .required()
    .label('Опис')
    .description('Короткий опис у довільній формі (декілька речень або до 300 символів). Опис має включати коротку інформацію про мету, функції, діяльність. Рекомендовано, щоб опис не дублював дані в інших колонках таблиці.'),
  
  constituentDocumentURL: Joi.string()
    .uri()
    .allow(null)
    .optional()
    .label('Установчий документ')
    .description('Посилання на оприлюднений в мережі Інтернет установчий або інший офіційний документ, що визначає мету діяльності, повноваження, функції (наприклад, статут, положення). Посилання має починатися з http:// або https://. Наприклад: https://www.example.gov.ua/statut/. Якщо документ не оприлюднений вказати null.'),
  
  homepage: Joi.string()
    .uri()
    .required()
    .label('Офіційний веб-сайт')
    .description('Посилання на офіційний веб-сайт в мережі Інтернет (URL). Посилання має починатися з http:// або https://. Наприклад: https://www.example.gov.ua/.'),
  
  account: Joi.string()
    .optional()
    .label('Посилання на сторінки в соціальних медіа')
    .description('Посилання (URL) на сторінки соціальних медіа (Facebook, Twitter, Instagram, YouTube та ін.). Посилання мають бути відділені комами й починатися з http:// або https://. Наприклад: https://www.example-1.com/, https://www.example-2.com/.'),
  
  logo: Joi.string()
    .uri()
    .allow(null)
    .optional()
    .label('Логотип')
    .description('Посилання на зображення логотипа оприлюднене в мережі Інтернет. Посилання має починатися з http:// або https://. Наприклад: https://www.example.gov.ua/logo.png. Якщо логотип відсутній, вказати null.'),
  
  headFn: Joi.string()
    .required()
    .label('Ім’я керівника')
    .description('Повне прізвище, ім’я, по батькові керівника. Наприклад: Коваль Олена Вікторівна.'),
  
  headPost: Joi.string()
    .required()
    .label('Посада керівника')
    .description('Повна назва посади керівника. Наприклад: Директор.'),
  
  subOrgOfId: Joi.string()
    .pattern(/^\d{8}$/)
    .optional()
    .label('Підпорядкування (ідентифікатор юридичної особи)')
    .description('Код ЄДРПОУ юридичної особи, якій підпорядковується дане підприємство, установа (заклад), організація. Наприклад, 01234567.'),
  
  subOrgOfPrefLabel: Joi.string()
    .optional()
    .label('Підпорядкування (назва юридичної особи)')
    .description('Повна назва юридичної особи, якій підпорядковується дане підприємство, установа (заклад), організація. Наприклад: Міністерство економічного розвитку і торгівлі України.'),
  
  addressAdminUnitL1: Joi.string()
    .valid('Україна')
    .required()
    .label('Країна')
    .description('Назва країни. У колонці має бути зазначено Україна.'),
  
  addressAdminUnitL2: Joi.string()
    .required()
    .label('Регіон')
    .description('Назва області або Автономна Республіка Крим. Наприклад: Полтавська область.'),
  
  addressAdminUnitL3: Joi.string()
    .allow(null)
    .optional()
    .label('Район')
    .description('Назва адміністративного району. Наприклад: Бориспільський район. Якщо районний поділ відсутній, вказати null.'),
  
  addressPostName: Joi.string()
    .required()
    .label('Населений пункт')
    .description('Назва населеного пункту без слів “місто”, “село” та їх скорочень — “м.”, “с.”. Наприклад: Дрогобич.'),
  
  addressThoroughfare: Joi.string()
    .required()
    .label('Вулиця')
    .description('Тип та назва вулиці або іншого топоніму, на якому знаходиться адреса: проспект, бульвар, набережна, майдан. Наприклад, вул. Харківська.'),
  
  addressLocatorDesignator: Joi.string()
    .required()
    .label('Номер будівлі')
    .description('Номер будівлі. Номер може включати числа та букви. Наприклад, 15-А.'),
  
  addressLocatorName: Joi.string()
    .allow(null)
    .optional()
    .label('Назва будівлі або її частини')
    .description('Назва або опис, що дозволяє чіткіше визначити розміщення. Зокрема, назва житлового комплексу, школи, лікарні, офісного або торгового центру; частина будівлі, наприклад, корпус, крило; приміщення в будівлі, наприклад, квартира, кабінет, офіс, зала; інший варіант написання номера адреси; довільний текстовий опис, що дозволяє визначити розміщення; інший ідентифікатор. Якщо назва будівлі або її частини відсутня, вказати null.'),
  
  addressPostCode: Joi.string()
    .pattern(/^\d{5}$/)
    .required()
    .label('Поштовий індекс')
    .description('П’ятизначний поштовий індекс адреси. Наприклад, 71890.'),
  
  addressPoBox: Joi.string()
    .allow(null)
    .optional()
    .label('Абонентська поштова скринька')
    .description('Номер абонентської поштової скриньки. Зазначається без знаку “№”. Наприклад: 312. Якщо абонентська поштова скринька відсутня, вказати null.'),
  
  contactPointName: Joi.string()
    .required()
    .label('Контактна особа/підрозділ')
    .description('Прізвище, ім’я, по батькові посадової особи або назва підрозділу, чиї контактні дані вказуються. Наприклад: Приймальня.'),
  
  contactPointHasEmail: Joi.string()
    .email()
    .optional()
    .label('Адреса електронної пошти')
    .description('Адреса електронної пошти контактної особи, підрозділу або приймальні. Наприклад: contact@example.gov.ua. У випадку кількох адрес значення розділити комою.'),
  
  contactPointHasTelephone: Joi.string()
    .pattern(/^\+380\d{9}$/)
    .optional()
    .label('Номер телефону')
    .description('Номер телефону контактної особи, підрозділу або приймальні, включаючи код країни та міста. Номер має починатися з +380, включати код населеного пункту або оператора та телефонний номер (12 цифр, без пробілів і дужок). Наприклад: +380123456789. У електронних таблицях допускається написання коду країни 380 або використання комбінації ‘+ (апостроф та плюс). У випадку кількох номерів телефону значення розділити комою.'),
  
  contactPointОpeningHours: Joi.string()
    .optional()
    .label('Дні та години прийому')
    .description('Дні та години прийому контактної особи, підрозділу або приймальні. Дні тижня позначаються комбінаціями літер (Пн, Вт, Ср, Чт, Пт, Сб, Нд), години — цифрами у 24-годинному форматі (ГГ:ХХ). Для графіка з понеділка до п’ятниці, з 9:00 до 17:00 запис у таблиці матиме вигляд — Пн-Пт 09:00-17:00. Коли потрібно позначити інтервал днів (з понеділка по п’ятницю) використовується дефіс, коли окремі дні (понеділок та п’ятниця) — кома. Наприклад, графік прийому в понеділок і п’ятницю з 09:00-17:00 матиме такий вигляд: Пн,Пт 09:00-17:00. Якщо графік змінюється протягом тижня, різні режими прийому необхідно записати через кому. Наприклад, Пн-Чт 08:00-17:20, Пт 08:00-16:00.'),
  
  сontactPointAvailabRestriction: Joi.string()
    .optional()
    .label('Обмеження прийому')
    .description('Уточнення в довільній формі щодо обідньої перерви, днів, коли графік діє та ін. Наприклад: Перерва на обід: 12:00-13:00; Прийом відбувається лише кожного першого понеділка місяця.')
})

module.exports = schema
